sudo: required

services:
  - docker

env:
  global:
    - PACKAGE="apache-tomcat"
    - VERSION="7.0.65"
    - RELEASE="1"
    - DIST="el7"
    - DIR="/data"
    - CONTAINER="centos:7"
    
script:
# Build the RPM(s).
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/build.sh -p ${PACKAGE} -v ${VERSION} -r ${RELEASE} -d ${DIST}

# Test the installation of the RPM.
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/test.sh -p ${PACKAGE} -v ${VERSION} -r ${RELEASE} -d ${DIST}

# Create a repository. (Can be used to publish to i.e. Amazon S3)
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/createrepo.sh

# Publish the results to Gemfury. The $URL variable is stored in Travis-CI. (it's private...)
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/x86_64/${PACKAGE}-${VERSION}-${RELEASE}.${DIST}.x86_64.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-manager-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-ROOT-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-docs-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-examples-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-gemfury.sh -u ${URL} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-host-manager-${VERSION}-${RELEASE}.${DIST}.noarch.rpm

# Publish the results to Amazon S3. The $S3KEY and S3SECRET are stored in Travis-CI. (It's private...)
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/x86_64/${PACKAGE}-${VERSION}-${RELEASE}.${DIST}.x86_64.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-manager-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-ROOT-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-docs-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-examples-${VERSION}-${RELEASE}.${DIST}.noarch.rpm
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${DIR}/rpmbuild/RPMS/noarch/${PACKAGE}-host-manager-${VERSION}-${RELEASE}.${DIST}.noarch.rpm

# Delete something (as a test) from Amazon S3.
- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/delete-s3.sh -k ${S3KEY} -s ${S3SECRET} -p ${PACKAGE}-${VERSION}-${RELEASE}.${DIST}.x86_64.rpm

# Publish the "repodata" to Amazon S3.
#- docker run -v $(pwd):${DIR} ${CONTAINER} /bin/sh ${DIR}/publish-s3-directory.sh -k ${S3KEY} -s ${S3SECRET} -S ${DIR}/repository/repodata -d repodata

notifications:
  email: false
